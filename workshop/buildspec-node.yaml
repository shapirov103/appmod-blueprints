version: 0.2

env:
    variables:
      IMAGE_TAG : "v1"
phases:
  pre_build:
    commands:
      - echo "STARTING PYTHON INSTALLATION"
      - "curl -s -qL -o python.tgz https://www.python.org/ftp/python/${PY_VERSION}/Python-${PY_VERSION}.tgz"
      - "tar xf python.tgz -C /usr/bin/"
      - "python --version"
      - python -m pip install -U pip
      - pip install git-remote-codecommit
      - echo Logging in to CodeCommit
      - git clone codecommit://appmod-workshop
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - cd appmod-workshop
      - echo $( git diff HEAD^ -- applications/node/ | wc -l )
      - |
        echo Building the Node image...
        if [ $( git diff HEAD^ -- applications/node/ | wc -l ) -gt 0 ]; then
          docker build -t $NODE_IMAGE_REPO_NAME:$IMAGE_TAG ./applications/node/
          docker tag $NODE_IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$NODE_IMAGE_REPO_NAME:$IMAGE_TAG
        fi
  post_build:
    commands:
      - |
        echo Pushing the Node image...
        if [ $( git diff HEAD^ -- applications/node/ | wc -l ) -gt 0 ]; then
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$NODE_IMAGE_REPO_NAME:$IMAGE_TAG
        fi
      - echo Build completed on `date`
